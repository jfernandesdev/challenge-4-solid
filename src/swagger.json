{ 
  "swagger": "2.0",
  "info": {
    "title": "API Documentation",
    "description": "This is an API Users",
    "version": "1.0.0",
    "contact": {
      "email": "jfernandes.dev@gmail.com"
    }
  },
  "paths": {
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a user",
        "description": "The route receives the name and e-mail within the body of the request to register a user.",
        "consumes": ["application/json"],
     
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User name and email",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }
              },
              "example": {
                "name": "Fulano de Tal",
                "email": "fulano@teste.com"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "User already exists!"
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "summary": "List all users",
        "description": "The route will receive a user_id property containing the user id in the request header and return a list of all users only if the user is admin.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "user_id",
            "description": "User ID requesting the listing",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            } 
          },
          "400": {
            "description": "User no permission required!"
          }
        }
      }  
    },
    "/users/{user_id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by id",
        "description": "The route receives the id of a user in the route parameters and returns the information of the found user.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "User ID do find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User information",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found."
          }
        }
      }  
    },
    "/users/{user_id}/admin": {
      "patch": {
        "tags": ["Users"],
        "summary": "Turn user into admin",
        "description": "The route receives the id of a user in the route parameters and turns this user into admin.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "definitions": "User ID to be turned into admin",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User turned into admin",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/User"
              }
            } 
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "admin": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    }
  }
}


